apiVersion: apps/v1
kind: Deployment
metadata:
  name: recipes
  labels:
    app: recipes
    environment: production
    tier: frontend
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: recipes
      environment: production
  template:
    metadata:
      labels:
        app: recipes
        tier: frontend
        environment: production
    spec:
      restartPolicy: Always
      serviceAccount: recipes
      serviceAccountName: recipes
      initContainers:
        # fail and crash loop pod when db connection not possible
      - name: connect-db
        command:
        - sh
        - -c
        - psql -h ${POSTGRES_HOST} -U ${POSTGRES_USER} ${POSTGRES_DB} -c 'select 1;'
        env:
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: secret-key
              name: recipes
        - name: DB_ENGINE
          value: django.db.backends.postgresql_psycopg2
        - name: POSTGRES_HOST
          value: recipes-postgresql
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_USER
          value: recipes
        - name: POSTGRES_DB
          value: recipes
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              key: postgresql-password
              name: recipes
        - name: PGCONNECT_TIMEOUT
          value: "30"
        image: vabene1111/recipes:1.3.2
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
        securityContext:
          runAsGroup: 65534
          runAsUser: 65534
      - name: init-chmod-data
        command:
        - sh
        - -c
        - |
          set -e
          source venv/bin/activate
          echo "Updating database"
          python manage.py migrate
          python manage.py collectstatic_js_reverse
          python manage.py collectstatic --noinput
          echo "Setting media file attributes"
          chown -R 65534:65534 /opt/recipes/mediafiles
          find /opt/recipes/mediafiles -type d | xargs -r chmod 755
          find /opt/recipes/mediafiles -type f | xargs -r chmod 644
          echo "Done"
        env:
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: secret-key
              name: recipes
        - name: DB_ENGINE
          value: django.db.backends.postgresql_psycopg2
        - name: POSTGRES_HOST
          value: recipes-postgresql
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_USER
          value: recipes
        - name: POSTGRES_DB
          value: recipes
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgresql-password
              name: recipes
        image: vabene1111/recipes:1.3.2
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 250m
            memory: 64Mi
        securityContext:
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - name: media
          mountPath: /opt/recipes/mediafiles
          # mount as subPath due to lost+found on ext4 pvc
          subPath: files
        - name: static
          mountPath: /opt/recipes/staticfiles
          # mount as subPath due to lost+found on ext4 pvc
          subPath: files
      containers:
      - name: recipes
        command:
          - /opt/recipes/venv/bin/gunicorn
          - -b
          - :8080
          - --access-logfile
          - '-'
          - --error-logfile
          - '-'
          - --log-level
          - WARN
          - recipes.wsgi
        env:
          - name: DEBUG
            value: "0"
          - name: ALLOWED_HOSTS
            value: '*'
          - name: SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: recipes
                key: secret-key
          - name: DB_ENGINE
            value: django.db.backends.postgresql_psycopg2
          - name: POSTGRES_HOST
            value: recipes-postgresql
          - name: POSTGRES_PORT
            value: "5432"
          - name: POSTGRES_USER
            value: recipes
          - name: POSTGRES_DB
            value: recipes
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: recipes
                key: postgresql-password
        image: vabene1111/recipes:1.3.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          periodSeconds: 30
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          periodSeconds: 30
        startupProbe:
          failureThreshold: 40
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
        ports:
          - containerPort: 8080
            protocol: TCP
            name: gunicorn
        resources:
          requests:
            cpu: 250m
            memory: 64Mi
        securityContext:
          runAsGroup: 65534
          runAsUser: 65534
        volumeMounts:
        - name: media
          mountPath: /opt/recipes/mediafiles
          # mount as subPath due to lost+found on ext4 pvc
          subPath: files
        - name: static
          mountPath: /opt/recipes/staticfiles
          # mount as subPath due to lost+found on ext4 pvc
          subPath: files
      - name: nginx
        image: nginx:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        resources:
          requests:
            cpu: 50m
            memory: 32Mi
        securityContext:
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - name: media
          mountPath: /media
          # mount as subPath due to lost+found on ext4 pvc
          subPath: files
        - name: static
          mountPath: /static
          # mount as subPath due to lost+found on ext4 pvc
          subPath: files
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          readOnly: true
          subPath: nginx-config
      volumes:
      - name: media
        persistentVolumeClaim:
          claimName: recipes-media
      - name: static
        emptyDir: {}
      - name: nginx-config
        configMap:
          defaultMode: 420
          name: recipes-nginx-config
